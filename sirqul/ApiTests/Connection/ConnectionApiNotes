x 1. Object  "/consumer/connection/group/addConnection"
        Adds a connection to a group.
        Returns a SirqulResponse with a message of success or fail

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "connectionId=1257682" \
        -d "groupId=764" \
        https://dev-test.sirqul.com/api/3.15/consumer/connection/group/addConnection

        NOTES:
          - 'groupId' is 'connectionGroupId' in the response of '/consumer/connection/group'
          - How to create a connectionId

        STEPS:
          1. create group
          2. add Connection

          * connection id 1257682




x 2. Object  "/consumer/connection/group/addSubGroup"
        Add sub groups to a group.
        Returns ConnectionGroupResponse on a valid response, SirqulResponse on an invalid response

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "connectionId=1257682" \
        -d "groupId=759" \
        -d "subGroupIds=758" \
        https://dev-test.sirqul.com/api/3.15/consumer/connection/group/addSubGroup

        STEPS:
          1. create parent group
          2. create child group
          3. add child group as subgroup of parent group
          4. check

          * connection id: 1111



x 3. SirqulResponse  POST "/consumer/connection/add"
        Creates or updates the connection of the user and another account.
        Returns SirqulResponse

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "connectionAccountId=2547158" \
        -d "groupId=769" \
        https://dev-test.sirqul.com/api/3.15/consumer/connection/add

        NOTES:
        - How do I create a connectionId
        - Default value (0) on connectionId will not work

        STEPS:
          1. add Connection to account


x 4. Object  "/consumer/connection/group"
        Creates a new private group.
        Returns ConnectionGroupResponse on a valid response, SirqulResponse on an invalid response

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "name=MyCamelCaseGroup" \
        -d "description=A Description" \
        https://dev-test.sirqul.com/api/3.15/consumer/connection/group

        NOTES: 
          - 'name' is not Optional as the documentation states.
          - 'description' is not Optional as the documentation states. Unlike when requesting without name, when requesting without 'description', the response error is non-descriptive of the issue, it says "not-null property references a null or transient va..." instead of "...cant complete request without a description."
          - This CURL depends on a valid connectionId. How do I create a connectionId
          - Default value (0) on connectionId will not work

        STEPS:
          1. create group

          * group name TestGroupOne
          * group description Test Description One


x 5. SirqulResponse  POST "/consumer/friend/accept"
        Accept a friend request and optionally sends a notification.
        Returns SirqulResponse

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547158" \
        -d "friendAccountId=2547109" \
        https://dev-test.sirqul.com/api/3.15/consumer/friend/accept


        NOTES:
          - gameType should not be in the documentation

        STEPS:
          1. send friend request from 2547109 to 2547158 using /consumer/friend/request
          2. 2547158 accepts friend request from 2547109

x 6. SirqulResponse  POST "/consumer/friend/reject"
        Accept a friend request and optionally sends a notification.
        Returns SirqulResponse

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547158" \
        -d "friendAccountId=2547109" \
        https://dev-test.sirqul.com/api/3.15/consumer/friend/reject


        NOTES:
          - works same way as /consumer/friend/accept

        STEPS:
          1. send friend request from 2547109 to 2547158 using /consumer/friend/request
          2. 2547158 rejects friend request from 2547109

x 7. SirqulResponse  POST "/consumer/friend/remove"
        Accept a friend request and optionally sends a notification.
        Returns SirqulResponse

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "friendAccountId=2547158" \
        https://dev-test.sirqul.com/api/3.15/consumer/friend/remove


        NOTES:
          - gameType should not be in the documentation

        STEPS:
          1. send friend request from 2547109 to 2547158 using /consumer/friend/request
          2. 2547158 accepts friend request from 2547109
          3. 2547109 removes 2547158 from friends friend

x 8. SirqulResponse  POST "/consumer/friend/request"
        Sends a friend request notification to another user.
        Returns SirqulResponse

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "friendAccountId=2547158" \
        https://dev-test.sirqul.com/api/3.15/consumer/friend/request

        NOTES:
          - gameType? wasnt it deprecated?
          - 10. /consumer/connection/get can be used to check friend list

        STEPS:
          1. send request
          * friendAccountId: 2547158

x 9. SirqulResponse "/consumer/connection/getRequested"
        Gets the connection sent friend requests.
        Returns ConnectionListResponse on a valid response, SirqulResponse on an invalid response

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        https://dev-test.sirqul.com/api/3.15/consumer/connection/getRequested

x 10. SirqulResponse  "/consumer/connection/get"
        Gets the connections.
        Returns ConnectionListResponse on a valid response, SirqulResponse on an invalid response

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "connectionAccountId=2547158" \
        https://dev-test.sirqul.com/api/3.15/consumer/connection/get

        STEPS:
          1. request friend with /consumer/friend/request
          2. accept friend request /consumer/friend/accept
          3. get connections

x 11. SirqulResponse  "/consumer/connection/group/details/get"
        Get detailed information about a group.
        Returns ConnectionGroupResponse on a valid response, SirqulResponse on an invalid response

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "groupId=801" \
        https://dev-test.sirqul.com/api/3.15/consumer/connection/group/details/get

        NOTES:
          - groupId is not optional as the documentation says

        STEPS:
          1. Create a group
          2. Get the group details
          
x 12. SirqulResponse  "/connection/group/search"
        Gets a user's private groups and default groups.
        Returns ConnectionInfoResponse on a valid response, SirqulResponse on an invalid response

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        https://dev-test.sirqul.com/api/3.15/connection/group/search

        STEPS: 
          1. Search groups

x 13. Object  "/consumer/connection/group/removeConnection"
        Removes the connection from group.
        Returns a SirqulResponse with a message of success or fail

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "groupId=760" \
        -d "connectionId=1111" \
        https://dev-test.sirqul.com/api/3.15/consumer/connection/group/removeConnection

        STEPS:
          1. create group
          2. add connection to group
          3. remove connection from group
          * connectionId = 1111

x 14. SirqulResponse  "/consumer/connection/group/remove"
        Remove a user's group.
        Returns a SirqulResponse with a message of success or fail

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "groupId=760" \
        https://dev-test.sirqul.com/api/3.15/consumer/connection/group/remove

        STEPS:
          1. create a group
          2. remove the group
          3. assert the removing the group again fails

x 15. Object  "/consumer/connection/group/removeSubGroup"
        Remove sub groups from a group
        Returns ConnectionGroupResponse on a valid response, SirqulResponse on an invalid response

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        -d "groupId=759" \
        -d "subGroupIds=756" \
        https://dev-test.sirqul.com/api/3.15/consumer/connection/group/removeSubGroup

        STEPS:
          1. create parent group
          2. create child group 
          3. add child to parent as a subgroup
          4. remove child as a subgroup

x 16. SirqulResponse  "/connection/search"
        Search for accounts that the user may not have a connection with.
        Returns ConnectionListResponse on a valid response, SirqulResponse on an invalid response

        curl -i -X POST \
        -H "Application-Key: 6bebe7eba601b1fdc47e5995e3b9a181" \
        -H "Application-Rest-Key: de69a1afc278db90f8c101817099dd36" \
        -d "version=3.15" \
        -d "accountId=2547109" \
        https://dev-test.sirqul.com/api/3.15/connection/search

        NOTES:
          - Can use this to get test connections

        STEPS:
          1. search for connections
